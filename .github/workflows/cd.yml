name: Backend Deployment Pipeline
on:
    workflow_dispatch:
    push:
        branches:
            - "master"
            #Temp dev config delete later
            - "feature/**"
jobs:
    deploy-infrastructure:
        uses: LabregoPT/movie-analyst-infra/.github/workflows/infra-deploy.yml@master
        secrets:
            aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
            aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            tf_api_token: ${{ secrets.TF_API_TOKEN }}
            gcp_credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}
            azure_secret_key: ${{ secrets.AZURE_SECRET_KEY }}
            vpn_secret: ${{ secrets.VPN_SECRET }}
    upload-artifact:
        runs-on: ubuntu-latest  
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            - name: Setup node
              uses: actions/setup-node@v3
            - name: Install packages
              run: |
                npm update
                npm install
            - name: Zip artifact
              run: |
                sudo apt install zip --yes
                zip -qq -r back.zip .
            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                name: latest
                path: ./back.zip
    deploy-db:
        needs: [deploy-infrastructure]
        runs-on: self-hosted
        steps:
          - name: Install dependencies
            run: |
              sudo apt install jq --yes
          - name: Download infra artifact
            uses: actions/download-artifact@v3
            with:
              name: infra-output
              path: /home/jhone
          - name: Set env vars with provided json
            run: |
              cat /home/jhone/infra-output.json | jq -r '"DB_HOST=\(.db_private_ip.value)\nDB_USER=${{ secrets.DB_USER }}\nDB_PASSWORD=${{secrets.DB_PASSWORD}}\nDB_NAME=movie-db"' >/home/jhone/db.env
          - name: Install Ansible Azure dependencies
            run: |
              sudo apt update
              sudo apt install software-properties-common --yes
              sudo add-apt-repository --yes --update ppa:ansible/ansible
              sudo apt install ansible --yes
              ansible-galaxy collection install azure.azcollection
          - name: Display target machines
            run: |
              cd ansible
              ansible-inventory -i azure.azurerm.yml --graph
            env:
              AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
              AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
              AZURE_SECRET: ${{ secrets.AZURE_SECRET_KEY }}
              AZURE_TENANT: ${{ secrets.AZURE_TENANT }}
    deploy-app:
        needs: [deploy-infrastructure, upload-artifact]
        runs-on: self-hosted
        steps:
            - name: Obtain code from repo
              uses: actions/checkout@v3
            - name: Install Ansible and dependencies
              run: |
                sudo apt update
                sudo apt install software-properties-common --yes
                sudo add-apt-repository --yes --update ppa:ansible/ansible
                sudo apt install ansible --yes
                ansible-galaxy collection install google.cloud
                sudo apt install python3-pip --yes
                sudo pip install requests google-auth
            - name: Find objective machines
              run: |
                cd ansible
                ansible-inventory -i gcp_vm.gcp.yml --graph
              env:
                GCP_SERVICE_ACCOUNT_CONTENTS: ${{ secrets.GCP_CREDENTIALS_JSON }}
            - name: Download artifact in machine
              uses: actions/download-artifact@v3
              with:
                name: latest
                path: /home/jhone
            - name: Deploy artifact to target machines
              run: |
                cd ansible
                ansible-playbook deploy-artifact.yml -i gcp_vm.gcp.yml
              env:
                GCP_SERVICE_ACCOUNT_CONTENTS: ${{ secrets.GCP_CREDENTIALS_JSON }}